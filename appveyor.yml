# branches to build
branches:
  # whitelist
  only:
    - master

# Build worker image (VM template)
image: Visual Studio 2017

# fetch repository as zip archive for faster clone
shallow_clone: true
clone_depth: 1
# since we're pushing releases we don't want infinite recursion
# because the release pushes a tag, hence we aren't building on tags
skip_tags: true

platform:
  - x86
  - x64

for:
- matrix:
    only:
      - platform: x64
  init:
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
- matrix:
    only:
      - platform: x86
  init:
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"

environment:
  QT5PORTDIR: C:\tools\vcpkg\ports\qt5-base
  TRIPLET: $(PLATFORM)-windows-static
  ARTIFACT_NAME: rgmdeps-$(PLATFORM).zip
  # change this if you add more DEPS to matrix
  MATRIX_SIZE: 1
  matrix:
    - {DEPS: pugixml}
    #- DEPS: qt5-base
    #- DEPS: pugixml rapidjson yaml-cpp protobuf grpc qscintilla

install:
  # pull any updated mirrors for vcpkg packages
  - cd C:\tools\vcpkg
  - git pull
  - cd %APPVEYOR_BUILD_FOLDER%
  - ps: |
      # copy da patches over to da vcpkg port
      Copy-Item ".\fix-system-pcre2.patch" -Destination "$env:QT5PORTDIR"
      Copy-Item ".\fix-system-pcre2-linux.patch" -Destination "$env:QT5PORTDIR"
      Copy-Item ".\fix-msvc2017.patch" -Destination "$env:QT5PORTDIR"
      # copy over the actual portfile
      Copy-Item ".\portfile.cmake" -Destination "$env:QT5PORTDIR"
  - ps: |
      # this depends on a deterministic ordering of the jobs
      # where every other job has the same architecture
      # (e.g, debug x86, debug x64, release x86, release x64)
      # jobs 1 and 3, and 2 and 4 have the same architectures
      If ($env:APPVEYOR_JOB_NUMBER -gt $env:MATRIX_SIZE) {
        # get the id of the previous job for the same architecture
        $apiURL = "https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG"
        $project = Invoke-RestMethod -Method Get -Uri $apiURL/build/$env:APPVEYOR_BUILD_VERSION
        $archive_job = $project.build.jobs[$env:APPVEYOR_JOB_NUMBER - $env:MATRIX_SIZE].jobId
        # download and extract the previous deps so we can amend them
        $artifactsURL = "https://ci.appveyor.com/api/buildjobs/$archive_job/artifacts/"
        appveyor DownloadFile ($artifactsURL + $env:ARTIFACT_NAME) -FileName $env:ARTIFACT_NAME
        7z a $env:ARTIFACT_NAME C:\tools\vcpkg\installed\$env:TRIPLET
      }

build_script:
  # run the install from bash so proxy is detected
  #- vcpkg install %DEPS% --triplet %TRIPLET%
  # zip up the deps to push artifact to releases
  #- 7z a %ARTIFACT_NAME% C:\tools\vcpkg\installed\%TRIPLET%
  - echo %bot_push_on_green_token%
  - 7z a %ARTIFACT_NAME% portfile.cmake

artifacts:
  - path: rgmdeps-$(PLATFORM).zip
    name: rgmdeps-$(PLATFORM)

deploy:
  release: rgmdeps-v$(appveyor_build_version)
  provider: GitHub
  auth_token:
    secure: 0dfPI8cYNeLks0iLSmTyzrI/H0K3CfMrBsvfslzZp66w5gqg8pqSf4Edhovsox9k
  artifact: rgmdeps-$(PLATFORM)
  draft: false
  prerelease: false
  on:
    branch: master
